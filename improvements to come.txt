- Consider adding a "remove_unused_routines" logical to the generator. Potentially, this may search through the handwritten code and remove routines that are found to be unused.

- add a function that takes all of the object's properties, and outputs the object, ***if all properties are primitive and not allocatable***
	Example from MOONS:
	       function get_SS_SS(initialize,solve,restart,prescribed_BCs,solve_method) result(SS)
	         implicit none
	         type(solver_settings) :: SS
	         logical,intent(in) :: initialize,solve,restart,prescribed_BCs
	         integer,intent(in) :: solve_method
	         call init(SS,initialize,solve,restart,prescribed_BCs,solve_method)
	       end function
	This was also done for TMP/ISPs

- add a "compare" function that returns true if two objects are completely identical
- add a "insist_identical" routine that stops if two objects are not completely identical


